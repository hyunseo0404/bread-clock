// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "OAuth2로 발급 받은 코드를 이용한 토큰 발급 및 로그인 처리",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "로그인",
                "parameters": [
                    {
                        "description": "로그인 요청 정보",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/bakeries": {
            "get": {
                "description": "전체 빵집 목록 조회 (sort param 미지정 시 이름순 정렬)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bakeries"
                ],
                "summary": "빵집 목록 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "정렬 옵션 (name|distance)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "현재 위치 좌표값 (위도,경도)",
                        "name": "loc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "필터 옵션 (favorites)",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.bakeryList"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/bakeries/:bakeryId": {
            "get": {
                "description": "특정 빵집에 대한 상세 정보 조회",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bakeries"
                ],
                "summary": "빵집 상세 조회",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "빵집 ID",
                        "name": "bakeryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.bakeryDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/bakeries/:bakeryId/breads/availability": {
            "put": {
                "description": "특정 빵집의 빵 종류별 매진 정보 갱신",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bakeries"
                ],
                "summary": "빵 매진 정보 갱신",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "빵집 ID",
                        "name": "bakeryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "빵 정보 리스트",
                        "name": "breadList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.breadList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/bakeries/:bakeryId/favorite": {
            "put": {
                "description": "특정 빵집을 즐겨찾기에 추가",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bakeries"
                ],
                "summary": "빵집 즐겨찾기 추가",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "빵집 ID",
                        "name": "bakeryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "특정 빵집을 즐겨찾기에서 해제",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bakeries"
                ],
                "summary": "빵집 즐겨찾기 해제",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "빵집 ID",
                        "name": "bakeryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "특정 빵 종류가 제공되는 빵집들을 검색 (sort param 미지정 시 이름순 정렬)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "빵 이름으로 빵집 검색",
                "parameters": [
                    {
                        "type": "string",
                        "description": "검색 문자열",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "정렬 옵션 (name|distance)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "현재 위치 좌표값 (위도,경도)",
                        "name": "loc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.bakeryList"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.bakery": {
            "type": "object",
            "properties": {
                "breads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.breadDetail"
                    }
                },
                "coordinates": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photo_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.bakeryDetail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "breads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.breadDetail"
                    }
                },
                "coordinates": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "opening_hours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.openingHours"
                    }
                },
                "photo_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.bakeryList": {
            "type": "object",
            "properties": {
                "bakeries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.bakery"
                    }
                }
            }
        },
        "api.bread": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.breadDetail": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "available_hours": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "photo_url": {
                    "type": "string"
                }
            }
        },
        "api.breadList": {
            "type": "object",
            "properties": {
                "breads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.bread"
                    }
                }
            }
        },
        "api.loginRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "api.openingHours": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "string"
                },
                "open": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "110.165.23.18",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "빵시계 API 서버",
	Description:      "빵시계 API 서버입니다.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
